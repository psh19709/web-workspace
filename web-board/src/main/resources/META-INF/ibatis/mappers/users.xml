<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
 
<sqlMap namespace="users">
	<!-- 
		아이디를 전달받아서 sample_board_users 테이블에서 사용자정보를 조회해서 반환한다.
		
		public User getUserById(String id) {
			return (User) SqlMapper.selectOne("getUserById", id);
		}
	 -->
	 <select id="getUserById" parameterClass="string" resultClass="com.sample.vo.User">
	 	select
	 		user_id as id,
	 		user_password as password,
	 		user_name as name,
	 		user_email as email,
	 		user_deleted as deleted,
	 		user_created_date as createdDate,
	 		user_updated_date as updatedDate
	 	from
	 		sample_board_users
	 	where
	 		user_id = #value#
	 
	 </select>
	 
	<!-- 
		이메일을 전달받아서 sample_board_users 테이블에서 사용자정보를 조회해서 반환한다.
		public User getUserByEmail(String email) {
			return (User) SqlMapper.selectOne("getUserByEmail", email);
		}
	 -->
	 <select id="getUserByEmail" parameterClass="string" resultClass="com.sample.vo.User">
	 	select
	 		user_id as id,
	 		user_password as password,
	 		user_name as name,
	 		user_email as email,
	 		user_deleted as deleted,
	 		user_created_date as createdDate,
	 		user_updated_date as updatedDate
	 	from
	 		sample_board_users
	 	where
	 		user_email = #value#
	 </select>
	 
	<!-- 
		사용자정보를 전달받아서 sample_board_users 테이블에서 저장한다.
		
		public void insertUser(User user) {
			SqlMapper.insert("insertUser", user);
		}
	 -->
	<insert id="insertUser" parameterClass="com.sample.vo.User">
		insert into sample_board_users
			(user_id, user_password, user_name, user_email)
		values
			(#id#, #password#, #name#, #email#)
	</insert> 
	
</sqlMap>






